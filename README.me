# Proyecto de Gestión con Flask y Roadmap

Este es un proyecto de gestión de proyectos basado en **Flask**, que permite a los usuarios crear, editar y gestionar proyectos, incluyendo un "roadmap" para cada proyecto, donde se puede añadir una lista de pasos o tareas. El backend está desarrollado en **Python** con **Flask**, y utiliza **SQLite** como base de datos.

## Características

- **Gestión de Proyectos**: Crear, editar y eliminar proyectos.
- **Roadmap**: Asociar un roadmap con múltiples pasos a cada proyecto.
- **Gestión de Imágenes**: Subir y mostrar imágenes para los proyectos.
- **Interfaz Web**: Un frontend básico construido con HTML y CSS, que permite la interacción con el sistema de gestión de proyectos.

## Tecnologías Utilizadas

- **Flask**: Un framework ligero de Python para el desarrollo web.
- **SQLAlchemy**: Un ORM (Object-Relational Mapper) para interactuar con la base de datos.
- **SQLite**: Base de datos utilizada para almacenar la información de los proyectos y los pasos del roadmap.
- **Jinja2**: Motor de plantillas para generar HTML dinámico.
- **HTML/CSS**: Interfaz web básica para la aplicación.

## Requisitos Previos

Asegúrate de tener instalado lo siguiente antes de empezar:

- Python 3.10 o superior
- Pip (gestor de paquetes de Python)

## Instalación

1. Clona este repositorio en tu máquina local:

   ```bash
   git clone https://github.com/usuario/proyecto-gestion.git
Navega al directorio del proyecto:

bash
Copiar código
cd proyecto-gestion
Crea y activa un entorno virtual:

En Windows:

bash
Copiar código
python -m venv .venv
.venv\Scripts\activate
En Linux/Mac:

bash
Copiar código
python3 -m venv .venv
source .venv/bin/activate
Instala las dependencias:

bash
Copiar código
pip install -r requirements.txt
Configura la base de datos:

Inicializa la base de datos y ejecuta las migraciones para crear las tablas necesarias:

bash
Copiar código
flask db init
flask db migrate -m "Inicializar la base de datos"
flask db upgrade
Ejecuta la aplicación:

bash
Copiar código
flask run
La aplicación debería estar corriendo en http://127.0.0.1:5000/.

Uso
Crear un Proyecto
Ve a la página principal y selecciona "Crear Proyecto".
Llena los campos requeridos, incluyendo el nombre, el problema y los pasos del roadmap.
Guarda los cambios. El proyecto se agregará a la lista de proyectos.
Editar un Proyecto
Haz clic en el botón de "Editar" junto a cualquier proyecto en la lista.
Modifica los detalles del proyecto, incluyendo el nombre, el problema, los pasos del roadmap, o la imagen asociada.
Guarda los cambios.
Eliminar un Proyecto
Haz clic en el botón de "Eliminar" para remover un proyecto de la lista.

Estructura del Proyecto
graphql
Copiar código
proyecto-gestion/
│
├── app.py               # Archivo principal con las rutas y lógica de la app
├── models.py            # Definición de los modelos de base de datos (Proyecto, Step)
├── migrations/          # Directorio que contiene las migraciones de la base de datos
├── templates/           # Plantillas HTML para la interfaz web
│   ├── base.html        # Plantilla base HTML
│   ├── index.html       # Página principal que lista los proyectos
│   ├── editar_proyecto.html  # Formulario para editar un proyecto
│   └── crear_proyecto.html   # Formulario para crear un proyecto
├── static/              # Archivos estáticos (CSS, imágenes, etc.)
│   └── style.css        # Hoja de estilos personalizada
├── .venv/               # Entorno virtual (opcional)
├── README.md            # Este archivo
├── requirements.txt     # Lista de dependencias del proyecto
└── config.py            # Configuraciones de Flask
Dependencias
Las principales dependencias del proyecto están en requirements.txt. Algunas de las más importantes incluyen:

Flask
Flask-SQLAlchemy
Flask-Migrate
Jinja2
Contribuciones
Las contribuciones son bienvenidas. Para contribuir:

Haz un fork del repositorio.
Crea una nueva rama (git checkout -b feature/nueva-funcionalidad).
Realiza tus cambios y haz un commit (git commit -am 'Añadir nueva funcionalidad').
Sube la rama (git push origin feature/nueva-funcionalidad).
Crea un nuevo Pull Request.
Licencia
Este proyecto está bajo la licencia MIT. Puedes ver más detalles en el archivo LICENSE.

r
Copiar código

### Conclusión

Este archivo `README.md` proporciona una guía completa sobre cómo instalar, configurar y utilizar tu proyecto de gestión de proyectos. También incluye detalles sobre la estructura del proyecto y las dependencias necesarias. Puedes adaptarlo según lo requiera tu proyecto.